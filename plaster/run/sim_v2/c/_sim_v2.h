// This file was code-generated by sim_v2.c.sim_v2.init

#ifndef SIM_V2_H
#define SIM_V2_H

#include "stdint.h"
#include "c_common.h"

typedef struct {
    Size n_peps;
    Size n_cycles;
    Size n_samples;
    Size n_channels;
    Uint64 pi_bleach;
    Uint64 pi_detach;
    Uint64 pi_edman_success;
    CycleKindType * cycles;
    Size n_max_dyts;
    Size n_max_dyepeps;
    Size n_dyt_row_bytes;
    Size n_max_dyt_hash_recs;
    Size n_max_dyepep_hash_recs;
    Tab dyts;
    Hash dyt_hash;
    Tab dyepeps;
    Hash dyepep_hash;
    Tab pcbs;
    Tab pep_i_to_pcb_i;
    RecallType * pep_recalls;
    Index next_pep_i;
    Size count_only;
    Size output_n_dyts;
    Size output_n_dyepeps;
    Size n_threads;
    Uint64 rng_seed;
    pthread_mutex_t * work_order_lock;
    pthread_mutex_t * tab_lock;
    ProgressFn progress_fn;
    KeyboardInterruptFn check_keyboard_interrupt_fn;
} SimV2Context;
typedef struct {
    Size count;
    Index dyt_i;
    DyeType * chcy_dye_counts;
} Dyt;
typedef struct {
    Float64 pep_i;
    Float64 ch_i;
    Float64 p_bright;
} PCB;
typedef struct {
    Size n_new_dyts;
    Size n_new_dyepeps;
} Counts;
typedef struct {
    Index dyt_i;
    Index pep_i;
    Size n_reads;
} DyePepRec;
#endif
